import React, { useState, useReducer, useEffect, useCallback } from "react";

const useBookingForm = (onSubmit) => {
  const [date, setDate] = useState("");
  const [time, setTime] = useState("17:00");
  const [guests, setGuests] = useState(1);
  const [occasion, setOccasion] = useState("Birthday");
  const [bookingData, setBookingData] = useState([]);

  const timesReducer = (state, action) => {
    switch (action.type) {
      case "UPDATE_TIMES":
        return action.payload;
      default:
        return state;
    }
  };

  const [timesState, dispatchTimes] = useReducer(timesReducer, []);

  const handleDateChange = (event) => {
    const selectedDate = event.target.value;
    setDate(selectedDate);
    const newTimes = initializeTimes(selectedDate);
    dispatchTimes({ type: "UPDATE_TIMES", payload: newTimes });
  };

  const initializeTimes = (selectedDate) => {
    // Aquí puedes realizar lógica para obtener las franjas horarias disponibles para la fecha seleccionada
    return ["17:00", "18:00", "19:00", "20:00", "21:00", "22:00"];
  };

  useEffect(() => {
    // Obtener los datos de reserva guardados en el almacenamiento local al cargar el componente
    const bookingDataFromStorage =
      JSON.parse(localStorage.getItem("bookingData")) || [];
    setBookingData(bookingDataFromStorage);
  }, []);

  const saveBookingDataToLocalStorage = (newBookingData) => {
    localStorage.setItem("bookingData", JSON.stringify(newBookingData));
  };

  const handleSubmit = (event) => {
    event.preventDefault();
    const formData = {
      date,
      time,
      guests,
      occasion,
    };
    const newBookingData = [...bookingData, formData];
    setBookingData(newBookingData);
    saveBookingDataToLocalStorage(newBookingData);
    onSubmit(formData);
  };

  return {
    date,
    time,
    guests,
    occasion,
    bookingData,
    timesState,
    handleDateChange,
    setTime,
    setGuests,
    setOccasion,
    handleSubmit,
  };
};

const BookingForm = ({ onSubmit }) => {
  const {
    date,
    time,
    guests,
    occasion,
    bookingData,
    timesState,
    handleDateChange,
    setTime,
    setGuests,
    setOccasion,
    handleSubmit,
  } = useBookingForm(onSubmit);

  // Resto del código...
};
